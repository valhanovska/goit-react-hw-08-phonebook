{"version":3,"file":"static/js/357.2e35dc8b.chunk.js","mappings":"qOAAaA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACnBC,EAAY,SAAAH,GAAK,OAAIA,EAAMI,MAAV,EACjBC,EAAa,SAAAL,GAAK,OAAIA,EAAMC,SAASK,SAAnB,EAClBC,EAAiB,SAAAP,GAAK,OAAIA,EAAMC,SAASO,WAAnB,E,wCCFnC,EAAuB,mBAAvB,EAAsD,wBAAtD,EAAuF,qB,SC+GvF,MAhGA,WACE,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMZ,GAAWa,EAAAA,EAAAA,IAAYf,GACvBS,GAAcM,EAAAA,EAAAA,IAAYP,IAChCQ,EAAAA,EAAAA,YAAU,WACR,GAAIP,EAAa,CACf,IAAQE,EAAiBF,EAAjBE,KAAME,EAAWJ,EAAXI,OACdD,EAAQD,GACRG,EAAUD,EACX,CACF,GAAE,CAACJ,IAEJ,IAAMQ,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MAEd,OAAQX,GACN,IAAK,OACHC,EAAQU,GACR,MAEF,IAAK,SACHR,EAAUQ,GAMf,EAEKC,EAAQ,WACZT,EAAU,IACVF,EAAQ,GACT,EAsBD,OACE,kBAAMY,UAAWC,EAAQC,SArBN,SAAAN,GACnBA,EAAEO,iBACF,IAAMC,EAAajB,EACbkB,EAAiBD,EAAWE,cAEhC5B,EAAS6B,MAAK,qBAAGpB,KAAgBmB,gBAAkBD,CAArC,KACbpB,GACCP,EAAS6B,MAAK,qBAAGpB,KAAgBmB,gBAAkBD,CAArC,IAEhBG,MAAM,GAAD,OAAIJ,EAAJ,4BAGJnB,EAEGQ,GACEgB,EAAAA,EAAAA,IAAqB,CAAEtB,KAAAA,EAAME,OAAAA,EAAQqB,GAAIzB,EAAYyB,OAClDX,IAHLN,GAASkB,EAAAA,EAAAA,IAAW,CAAExB,KAAAA,EAAME,OAAAA,EAAQqB,IAAIE,EAAAA,EAAAA,UAAgBb,GAK/D,EAGC,WACE,iBAAKC,UAAWC,EAAhB,WACE,kBAAOY,QAAQ,OAAf,mBACA,kBACEC,KAAK,OACL3B,KAAK,OACLW,MAAOX,EACP4B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAAUvB,EACVe,GAAG,aAGP,iBAAKV,UAAWC,EAAhB,WACE,kBAAOY,QAAQ,SAAf,qBACA,kBACEC,KAAK,MACL3B,KAAK,SACLW,MAAOT,EACP0B,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,SAAUvB,EACVe,GAAG,eAGP,SAACS,EAAA,EAAD,CAAOC,UAAU,MAAMC,QAAS,EAAhC,UACE,UAACC,EAAA,EAAD,CAAY,aAAW,WAAWtB,UAAWC,EAAUa,KAAK,SAA5D,yBAEE,SAACS,EAAA,EAAD,WAKT,EC7GD,GAAgB,KAAO,0BAA0B,MAAQ,2BAA2B,OAAS,6B,6BC8D7F,EAjDoB,SAAC,GAA0B,IAAxBpC,EAAuB,EAAvBA,KAAME,EAAiB,EAAjBA,OAAQqB,EAAS,EAATA,GAC7Bc,GAAUjC,EAAAA,EAAAA,IAAYT,GACtBW,GAAWC,EAAAA,EAAAA,MAUjB,OACE,eAAIM,UAAWC,EAAAA,KAAf,UACE,iBAAKD,UAAWC,EAAAA,MAAhB,WACE,eAAGD,UAAWC,EAAAA,KAAd,UAAuBd,EAAvB,QACA,uBAAIE,KAEJ,UAAC8B,EAAA,EAAD,CAAOC,UAAU,MAAMC,QAAS,EAAhC,WACE,SAACC,EAAA,EAAD,CACE,aAAW,SACXR,KAAK,SACLd,UAAWC,EAAAA,OACXwB,QAfO,WACfhC,GAASiC,EAAAA,EAAAA,IAAchB,GACxB,EAcSiB,SAAUH,EALZ,UAOE,SAAC,IAAD,OAEF,SAACF,EAAA,EAAD,CACE,aAAW,OACXR,KAAK,SACLd,UAAWC,EAAAA,OACX0B,SAAUH,EACVC,QA7BU,WAClBhC,GAASmC,EAAAA,EAAAA,IAAkB,CAAEzC,KAAAA,EAAME,OAAAA,EAAQqB,GAAAA,IAC5C,EAsBO,UAOE,SAACmB,EAAA,EAAD,aAMX,ECtDD,EAAuB,0BCoCvB,EA7BoB,WAClB,IAAMnD,GAAWa,EAAAA,EAAAA,IAAYf,GACvBK,GAASU,EAAAA,EAAAA,IAAYX,GACrBa,GAAWC,EAAAA,EAAAA,OAEjBF,EAAAA,EAAAA,YAAU,WACgB,IAApBd,EAASoD,QACXrC,GAASsC,EAAAA,EAAAA,MAGZ,GAAE,IAEH,IAAMC,EAAmBtD,EAASG,QAAO,qBAAGM,KACrCmB,cAAc2B,SAASpD,EAAOqD,OADI,IAIzC,OACE,8BACGF,EAAiBF,OAAS,IACzB,eAAI9B,UAAWC,EAAf,SACG+B,EAAiBG,KAAI,gBAAGzB,EAAH,EAAGA,GAAIvB,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACpB,SAAC,EAAD,CAAsBF,KAAMA,EAAME,OAAQA,EAAQqB,GAAIA,GAApCA,EADE,OAO/B,E,QClCD,EAAyB,uBCkCzB,EA7Be,WACb,IAAMjB,GAAWC,EAAAA,EAAAA,MACXhB,GAAWa,EAAAA,EAAAA,IAAYf,GAEvBK,GAASU,EAAAA,EAAAA,KAAY,SAAAd,GAAK,OAAIA,EAAMI,MAAV,IAMhC,OACE,8BACuB,IAApBH,EAASoD,SACR,iBAAK9B,UAAWC,EAAhB,WACE,kBAAOY,QAAQ,SAAf,oCACA,kBACEK,SAVW,SAAAtB,GACnBH,GAAS2C,EAAAA,EAAAA,IAAaxC,EAAEyC,OAAOvC,OAChC,EASSA,MAAOjB,EACPiC,KAAK,OACL3B,KAAK,SACL6B,MAAM,wBACNN,GAAG,eAMd,EChCD,EAAuB,uBAAvB,EAA0D,4BC8B1D,MAvBA,WACE,IAAMhC,GAAWa,EAAAA,EAAAA,IAAYf,GAE7B,OACE,4BACE,eAAIwB,UAAWC,EAAf,wBACA,iBAAKD,UAAWC,EAAhB,WACE,4BACE,8CAEA,SAAC,EAAD,QAEF,2BACuB,IAApBvB,EAASoD,SAAgB,sCAE1B,SAAC,EAAD,KACA,SAAC,EAAD,YAKT,C","sources":["redux/Contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contacts/ContactItem/ContactItem.module.css?5f8b","pages/Contacts/ContactItem/ContactItem.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contacts/ContactList/ContactList.module.css?9e72","pages/Contacts/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.filter;\nexport const getLoading = state => state.contacts.isLoading;\nexport const getEditContact = state => state.contacts.editContact;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"inputform\":\"Form_inputform__RsJXN\",\"button\":\"Form_button__8NOIT\"};","import { nanoid } from '@reduxjs/toolkit';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts, getEditContact } from 'redux/Contacts/selectors';\nimport {\n  addContact,\n  editContact as editContactOperation,\n} from 'redux/Contacts/operations';\n\nimport Stack from '@mui/material/Stack';\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\nimport { IconButton } from '@mui/material';\n\nimport s from './Form.module.css';\nimport { useEffect } from 'react';\n\nfunction Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const editContact = useSelector(getEditContact);\n  useEffect(() => {\n    if (editContact) {\n      const { name, number } = editContact;\n      setName(name);\n      setNumber(number);\n    }\n  }, [editContact]);\n\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const reset = () => {\n    setNumber('');\n    setName('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const filterName = name;\n    const normFilterName = filterName.toLowerCase();\n    if (\n      contacts.find(({ name }) => name.toLowerCase() === normFilterName) ||\n      (editContact &&\n        contacts.find(({ name }) => name.toLowerCase() === normFilterName))\n    ) {\n      alert(`${filterName} is already in contacts`);\n      return;\n    } else {\n      !editContact\n        ? dispatch(addContact({ name, number, id: nanoid() })) && reset()\n        : dispatch(\n            editContactOperation({ name, number, id: editContact.id })\n          ) && reset();\n    }\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <div className={s.inputform}>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          id=\"name\"\n        />\n      </div>\n      <div className={s.inputform}>\n        <label htmlFor=\"number\">Number</label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          id=\"number\"\n        />\n      </div>\n      <Stack direction=\"row\" spacing={1}>\n        <IconButton aria-label=\"add call\" className={s.button} type=\"submit\">\n          Add contact\n          <AddIcCallIcon />\n        </IconButton>\n      </Stack>\n    </form>\n  );\n}\n\nexport default Form;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactItem_item__Qwbit\",\"group\":\"ContactItem_group__wBt1r\",\"button\":\"ContactItem_button__KRQn6\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/Contacts/operations';\n\nimport PropTypes from 'prop-types';\nimport s from './ContactItem.module.css';\nimport { getLoading } from 'redux/Contacts/selectors';\nimport { editContactAction } from 'redux/Contacts/slice';\n\nimport Stack from '@mui/material/Stack';\n\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/DeleteForever';\nimport EditIcon from '@mui/icons-material/Edit';\n\nconst ContactItem = ({ name, number, id }) => {\n  const loading = useSelector(getLoading);\n  const dispatch = useDispatch();\n\n  const onClickEdit = () => {\n    dispatch(editContactAction({ name, number, id }));\n  };\n\n  const onDelete = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <li className={s.item}>\n      <div className={s.group}>\n        <p className={s.name}>{name}:</p>\n        <p>{number}</p>\n\n        <Stack direction=\"row\" spacing={1}>\n          <IconButton\n            aria-label=\"delete\"\n            type=\"button\"\n            className={s.button}\n            onClick={onDelete}\n            disabled={loading}\n          >\n            <DeleteIcon />\n          </IconButton>\n          <IconButton\n            aria-label=\"edit\"\n            type=\"button\"\n            className={s.button}\n            disabled={loading}\n            onClick={onClickEdit}\n          >\n            <EditIcon />\n          </IconButton>\n        </Stack>\n      </div>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__QDft4\"};","import ContactItem from '../ContactItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/Contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/Contacts/operations';\n\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (contacts.length === 0) {\n      dispatch(fetchContacts());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const lowerCaseContact = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter.trim())\n  );\n\n  return (\n    <>\n      {lowerCaseContact.length > 0 && (\n        <ul className={s.list}>\n          {lowerCaseContact.map(({ id, name, number }) => (\n            <ContactItem key={id} name={name} number={number} id={id} />\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/Contacts/filterSlice';\nimport { getContacts } from 'redux/Contacts/selectors';\n\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const filter = useSelector(state => state.filter);\n\n  const handleFilter = e => {\n    dispatch(changeFilter(e.target.value));\n  };\n\n  return (\n    <>\n      {contacts.length !== 0 && (\n        <div className={s.filter}>\n          <label htmlFor=\"filter\">Find contacts by name</label>\n          <input\n            onChange={handleFilter}\n            value={filter}\n            type=\"text\"\n            name=\"filter\"\n            title=\"Find contacts by name\"\n            id=\"filter\"\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"Contacts_text__kop-x\",\"container\":\"Contacts_container__WzsIr\"};","import Form from '../../components/Form';\nimport ContactList from './ContactList';\nimport Filter from '../../components/Filter';\n\nimport s from './Contacts.module.css';\nimport { useSelector } from 'react-redux';\nimport { getContacts } from 'redux/Contacts/selectors';\n\nfunction ContactsPage() {\n  const contacts = useSelector(getContacts);\n\n  return (\n    <div>\n      <h1 className={s.text}>Phonebook</h1>\n      <div className={s.container}>\n        <div>\n          <h2>Add new contacts</h2>\n\n          <Form />\n        </div>\n        <div>\n          {contacts.length !== 0 && <h2>Contacts</h2>}\n\n          <Filter />\n          <ContactList />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ContactsPage;\n"],"names":["getContacts","state","contacts","items","getFilter","filter","getLoading","isLoading","getEditContact","editContact","useState","name","setName","number","setNumber","useSelector","useEffect","dispatch","useDispatch","handleChange","e","currentTarget","value","reset","className","s","onSubmit","preventDefault","filterName","normFilterName","toLowerCase","find","alert","editContactOperation","id","addContact","nanoid","htmlFor","type","pattern","title","required","onChange","Stack","direction","spacing","IconButton","AddIcCall","loading","onClick","deleteContact","disabled","editContactAction","Edit","length","fetchContacts","lowerCaseContact","includes","trim","map","changeFilter","target"],"sourceRoot":""}